#!/usr/bin/sbcl --script
(defvar C)
(defvar M 5)
;Makes a 3D array
(setf C (make-array '(5 5 5)))
;;;Variable declarations
(defvar change)
(defvar minval 0.0)
(defvar maxval 0.0)
(defvar sumval)
(defvar diff 0.175)
(defvar rooms 5.0)
(defvar urms 250.0)
(defvar tstep (/ rooms urms M))
(defvar height (/ rooms M))
(defvar dC (/ (* diff tstep) (* height height)) )
(defvar tacc 0.0)
(defvar cr 0.0)
(setf (aref C 0 0 0) (* 1(expt 10 21))) ;Makes first element in cube 1e21
(write-line "Beginning Box simulation...")
;(print (aref C 0 0 0))
;(print dC)
;(print diff)
;(print tstep)
;(print height)
;Loop that checks when min and max value are equal
(loop while (<= cr  0.99)  do
      (dotimes (i M)
            (dotimes (j M)
                  (dotimes (k M)
                        (dotimes (l M)
                              (dotimes (m M)
                                    (dotimes (n M)
                                          (if (or (and (= i l) (= j m) (= k (+ n 1)))
                                           (and (= i l) (= j m) (= k (- n 1)))
                                           (and (= i l) (= j (+ m 1)) (= k n))
                                           (and (= i l) (= j (- m 1)) (= k n))
                                           (and (= i (+ l 1)) (= j m) (= k n))
                                           (and (= i (- l 1)) (= j m) (= k n)))
                                                (progn
                                                      (setf change (* (- (aref C i j k) (aref C l m n)) dC))
                                                      (setf (aref C i j k) (- (aref C i j k)change))
                                                      (setf (aref C l m n) (+ (aref C l m n)change))
                                                      ;(print "Made it into if statement")
                                                )
                                          )
                                    )
                              )
                        )
                  )
            )
      )
      (setf tacc(+ tacc tstep))
      ;;;Checks for mass consistency
      (setf sumval 0.0)
      (setf minval (aref C 0 0 0) )
      (setf maxval (aref C 0 0 0) )
      ;(print minval)
      ;(print maxval)
      (dotimes (i M)
           (dotimes (j M)
                  (dotimes (k M)
                        (setf maxval (max maxval (aref C i j k)))  ;Determines which is largest of the 2
                        (setf minval (min minval (aref C i j k)))  ;Determines which is smallest of the 2
                        (setf sumval(+ sumval (aref C i j k)))
                  )
            )
      )
      (setf cr (/ minval maxval) )
      ;;;Prints different values
      (format t "Time: ~,2d  Ratio: ~,2d  index: ~,2d ~%" tacc cr (aref C 0 0 0)) 
      ;(print (aref C (- M 1)(- M 1)(- M 1)))
      ;(print sumval)

)
(format t "Box diffused in ~,,2d seconds. ~%" tacc)
